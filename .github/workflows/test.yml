name: build-test
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - env:
          COMMIT: ${{ github.even.pull_request.head.sha || github.sha }}
        run: |
          npm run all

      - if: always()
        run: |
          mkdir ./report
          [ ! -f ./blinka_results.json ] || mv blinka_results.json ./report

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: report
          path: ./report

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          sed -i 's/\"commit\": \"fake\"/\"commit\": \"${{ github.even.pull_request.head.sha || github.sha }}\"/g' ./__tests__/blinka_results.json

      - uses: ./
        with:
          token_id: ${{ secrets.BLINKA_TOKEN_ID }}
          token_secret: ${{ secrets.BLINKA_TOKEN_SECRET }}
          filename: './__tests__/blinka_results.json'

  test_github: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          sed -i 's/\"commit\": \"fake\"/\"commit\": \"${{ github.even.pull_request.head.sha || github.sha }}\"/g' ./__tests__/blinka_results.json

      - name: json
        uses: ./
        with:
          tag: blinka.json
          github_token: ${{ secrets.GITHUB_TOKEN }}
          filename: './__tests__/blinka_results.json'

      - name: junit
        uses: ./
        with:
          tag: junit
          github_token: ${{ secrets.GITHUB_TOKEN }}
          filename: './__tests__/junit.xml'
